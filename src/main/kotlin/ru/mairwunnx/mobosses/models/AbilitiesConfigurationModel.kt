@file:UseSerializers(
  SoundSerializer::class,
  ParticleSerializer::class,
  EntityTypeSerializer::class,
  ChatColorSerializer::class,
  MaterialSerializer::class,
  EnchantmentSerializer::class,
  PotionEffectTypeSerializer::class,
)

package ru.mairwunnx.mobosses.models

import kotlinx.serialization.Contextual
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers
import org.bukkit.potion.PotionEffectType
import ru.mairwunnx.mobosses.serializers.ChatColorSerializer
import ru.mairwunnx.mobosses.serializers.EnchantmentSerializer
import ru.mairwunnx.mobosses.serializers.EntityTypeSerializer
import ru.mairwunnx.mobosses.serializers.MaterialSerializer
import ru.mairwunnx.mobosses.serializers.ParticleSerializer
import ru.mairwunnx.mobosses.serializers.PotionEffectTypeSerializer
import ru.mairwunnx.mobosses.serializers.SoundSerializer

@Serializable class AbilitiesConfigurationModel(
  @SerialName("is_lightning_enabled") val isLightningEnabled: Boolean,
  @SerialName("is_summoning_enabled") val isSummoningEnabled: Boolean,
  @SerialName("is_regeneration_enabled") val isRegenerationEnabled: Boolean,
  @SerialName("is_meteor_shower_enabled") val isMeteorShowerEnabled: Boolean,
  @SerialName("is_arrow_arc_enabled") val isArrowArcEnabled: Boolean,
  @SerialName("lightning_level_threshold") val lightningLevelThreshold: Int,
  @SerialName("summoning_level_threshold") val summoningLevelThreshold: Int,
  @SerialName("regeneration_level_threshold") val regenerationLevelThreshold: Int,
  @SerialName("general_cooldown") val generalCooldown: Long,
  @SerialName("general_cooldown_bias") val generalCooldownBias: Double,
  @SerialName("lightning_cooldown") val lightningCooldown: Long,
  @SerialName("lightning_cooldown_bias") val lightningCooldownBias: Double,
  @SerialName("summoning_cooldown") val summoningCooldown: Long,
  @SerialName("summoning_cooldown_bias") val summoningCooldownBias: Double,
  @SerialName("regeneration_cooldown") val regenerationCooldown: Long,
  @SerialName("regeneration_cooldown_bias") val regenerationCooldownBias: Double,
  @SerialName("lightning_damage") val lightningDamage: Double,
  @SerialName("lightning_damage_modifier") val lightningDamageModifier: Double,
  @SerialName("lightning_damage_max") val lightningDamageMax: Double,
  @SerialName("lightning_radius") val lightningRadius: Double,
  @SerialName("lightning_radius_modifier") val lightningRadiusModifier: Double,
  @SerialName("lightning_radius_max") val lightningRadiusMax: Double,
  @SerialName("lightning_strikes") val lightningStrikes: Int,
  @SerialName("lightning_strikes_modifier") val lightningStrikesModifier: Double,
  @SerialName("lightning_strikes_max") val lightningStrikesMax: Int,
  @SerialName("regeneration_duration_bias") val regenerationDurationBias: Double,
  @SerialName("regen_aura_radius") val regenAuraRadius: Double,
  @SerialName("regen_extra_resistance_seconds") val regenExtraResistanceSeconds: Int,
  @SerialName("regen_cleanse_negatives") val regenCleanseNegatives: Boolean,
  @SerialName("regen_anti_projectiles") val regenAntiProjectiles: Boolean,
  @SerialName("regen_slow_players") val regenSlowPlayers: Boolean,
  @SerialName("regen_duration_seconds_base") val regenDurationSecondsBase: Int,
  @SerialName("regen_duration_seconds_per_level") val regenDurationSecondsPerLevel: Double,
  @SerialName("regen_duration_seconds_max") val regenDurationSecondsMax: Int, // ≤ 16
  @SerialName("regen_amplifier_base") val regenAmplifierBase: Int,    // 0 = Regeneration I
  @SerialName("regen_amplifier_per_level") val regenAmplifierPerLevel: Double,
  @SerialName("regen_amplifier_max") val regenAmplifierMax: Int,
  @SerialName("is_fire_ring_enabled") val isFireRingEnabled: Boolean,
  @SerialName("fire_ring_min_radius") val fireRingMinRadius: Double,
  @SerialName("fire_ring_max_radius") val fireRingMaxRadius: Double,
  @SerialName("fire_ring_density") val fireRingDensity: Double,
  @SerialName("fire_ring_cooldown") val fireRingCooldown: Long,
  @SerialName("fire_ring_cooldown_bias") val fireRingCooldownBias: Double,
  @SerialName("fire_ring_level_threshold") val fireRingLevelThreshold: Int,
  @SerialName("is_web_ring_enabled") val isWebRingEnabled: Boolean,
  @SerialName("web_ring_radius") val webRingRadius: Double,
  @SerialName("web_ring_duration") val webRingDuration: Int,
  @SerialName("web_ring_potion_enabled") val webRingPotionEnabled: Boolean,
  @SerialName("web_ring_potion_base_duration") val webRingPotionBaseDuration: Int,
  @SerialName("web_ring_potion_max_duration") val webRingPotionMaxDuration: Int,
  @SerialName("web_ring_potion_level_modifier") val webRingPotionLevelModifier: Double,
  @SerialName("web_ring_cooldown") val webRingCooldown: Long,
  @SerialName("web_ring_cooldown_bias") val webRingCooldownBias: Double,
  @SerialName("web_ring_level_threshold") val webRingLevelThreshold: Int,
  @SerialName("is_teleport_strike_enabled") val isTeleportStrikeEnabled: Boolean,
  @SerialName("teleport_strike_cooldown") val teleportStrikeCooldown: Long,
  @SerialName("teleport_strike_cooldown_bias") val teleportStrikeCooldownBias: Double,
  @SerialName("teleport_strike_level_threshold") val teleportStrikeLevelThreshold: Int,
  @SerialName("meteor_shower_level_threshold") val meteorShowerLevelThreshold: Int,
  @SerialName("meteor_shower_cooldown") val meteorShowerCooldown: Long,
  @SerialName("meteor_shower_cooldown_bias") val meteorShowerCooldownBias: Double,
  @SerialName("meteor_shower_waves_base") val wavesBase: Int,
  @SerialName("meteor_shower_waves_per_level") val wavesPerLevel: Double,
  @SerialName("meteor_shower_waves_max") val wavesMax: Int,
  @SerialName("meteor_shower_meteors_per_wave_base") val meteorsPerWaveBase: Int,
  @SerialName("meteor_shower_meteors_per_wave_per_level") val meteorsPerWavePerLevel: Double,
  @SerialName("meteor_shower_meteors_per_wave_max") val meteorsPerWaveMax: Int,
  @SerialName("meteor_shower_radius_base") val radiusBase: Double,
  @SerialName("meteor_shower_radius_per_level") val radiusPerLevel: Double,
  @SerialName("meteor_shower_radius_max") val radiusMax: Double,
  @SerialName("meteor_shower_height") val meteorShowerHeight: Double,
  @SerialName("meteor_shower_fall_speed") val fallSpeed: Double,
  @SerialName("meteor_shower_wave_interval_ticks") val waveIntervalTicks: Long,
  @SerialName("meteor_shower_impact_damage_base") val impactDamageBase: Double,
  @SerialName("meteor_shower_impact_damage_per_level") val impactDamagePerLevel: Double,
  @SerialName("meteor_shower_impact_damage_max") val impactDamageMax: Double,
  @SerialName("meteor_shower_fire_radius") val fireRadius: Double,
  @SerialName("meteor_shower_ignite_seconds") val igniteSeconds: Int,
  @SerialName("meteor_shower_meteor_lifetime_seconds") val meteorLifetimeSeconds: Int,
  @SerialName("arrow_arc_level_threshold") val arrowArcLevelThreshold: Int,
  @SerialName("arrow_arc_cooldown") val arrowArcCooldown: Long,
  @SerialName("arrow_arc_cooldown_bias") val arrowArcCooldownBias: Double,
  @SerialName("arrow_arc_arrows_base") val arrowsBase: Int,
  @SerialName("arrow_arc_arrows_per_level") val arrowsPerLevel: Double,
  @SerialName("arrow_arc_arrows_max") val arrowsMax: Int,
  @SerialName("arrow_arc_rings") val rings: Int,
  @SerialName("arrow_arc_staggered") val staggered: Boolean,
  @SerialName("arrow_arc_no_gravity") val noGravity: Boolean,
  @SerialName("arrow_arc_speed") val speed: Double,
  @SerialName("arrow_arc_vertical_spread") val verticalSpread: Double,
  @SerialName("arrow_arc_damage_base") val damageBase: Double,
  @SerialName("arrow_arc_damage_per_level") val damagePerLevel: Double,
  @SerialName("arrow_arc_damage_max") val damageMax: Double,
  @SerialName("arrow_arc_lifetime_seconds") val arrowLifetimeSeconds: Int,
  @SerialName("arrow_arc_random_effect_level_threshold") val randomEffectLevelThreshold: Int,
  @SerialName("arrow_arc_random_effects_max_per_ring") val randomEffectsMaxPerRing: Int,
  @SerialName("arrow_arc_effect_duration_seconds") val effectDurationSeconds: Int,
  @SerialName("arrow_arc_effect_amplifier_min") val effectAmplifierMin: Int,
  @SerialName("arrow_arc_effect_amplifier_max") val effectAmplifierMax: Int,
  @SerialName("arrow_arc_negative_effects") val negativeEffects: List<@Contextual PotionEffectType>,

  @SerialName("is_arrow_rain_enabled") val isArrowRainEnabled: Boolean,
  @SerialName("arrow_rain_level_threshold") val arrowRainLevelThreshold: Int,
  @SerialName("arrow_rain_cooldown") val arrowRainCooldown: Long,
  @SerialName("arrow_rain_cooldown_bias") val arrowRainCooldownBias: Double,
  @SerialName("arrow_rain_arrows_base") val arrowRainArrowsBase: Int,
  @SerialName("arrow_rain_arrows_per_level") val arrowRainArrowsPerLevel: Double,
  @SerialName("arrow_rain_arrows_max") val arrowRainArrowsMax: Int,
  @SerialName("arrow_rain_waves") val arrowRainWaves: Int,
  @SerialName("arrow_rain_wave_interval_ticks") val arrowRainWaveIntervalTicks: Long,
  @SerialName("arrow_rain_half_size") val arrowRainHalfSize: Double,      // половина стороны квадрата (8.0 = 16x16)
  @SerialName("arrow_rain_height") val arrowRainHeight: Double,           // высота спавна над целью
  @SerialName("arrow_rain_fall_speed") val arrowRainFallSpeed: Double,    // начальная вертикальная скорость вниз
  @SerialName("arrow_rain_damage_base") val arrowRainDamageBase: Double,
  @SerialName("arrow_rain_damage_per_level") val arrowRainDamagePerLevel: Double,
  @SerialName("arrow_rain_damage_max") val arrowRainDamageMax: Double,
  @SerialName("arrow_rain_lifetime_seconds") val arrowRainLifetimeSeconds: Int,
  @SerialName("arrow_rain_random_effect_level_threshold") val arrowRainRandomEffectLevelThreshold: Int,
  @SerialName("arrow_rain_random_effects_max_per_wave") val arrowRainRandomEffectsMaxPerWave: Int,
  @SerialName("arrow_rain_effect_duration_seconds") val arrowRainEffectDurationSeconds: Int,
  @SerialName("arrow_rain_effect_amplifier_min") val arrowRainEffectAmplifierMin: Int,
  @SerialName("arrow_rain_effect_amplifier_max") val arrowRainEffectAmplifierMax: Int,
  @SerialName("arrow_rain_negative_effects") val arrowRainNegativeEffects: List<@Contextual PotionEffectType>,
  @SerialName("arrow_rain_target_search_radius") val arrowRainTargetSearchRadius: Double,
) {
  companion object {
    fun default() = AbilitiesConfigurationModel(
      isLightningEnabled = true,
      isSummoningEnabled = true,
      isRegenerationEnabled = true,
      isMeteorShowerEnabled = true,
      isArrowArcEnabled = true,
      lightningLevelThreshold = 15,
      summoningLevelThreshold = 25,
      regenerationLevelThreshold = 35,
      generalCooldown = 5000L,
      generalCooldownBias = 1.4,
      lightningCooldown = 10000L,
      lightningCooldownBias = 1.5,
      summoningCooldown = 20000L,
      summoningCooldownBias = 1.2,
      regenerationCooldown = 30000L,
      regenerationCooldownBias = 1.1,
      lightningDamage = 5.0,
      lightningDamageModifier = 0.1,
      lightningDamageMax = 20.0,
      lightningRadius = 3.0,
      lightningRadiusModifier = 0.05,
      lightningRadiusMax = 10.0,
      lightningStrikes = 6,
      lightningStrikesModifier = 0.1,
      lightningStrikesMax = 26,
      regenerationDurationBias = 1.4,
      regenAuraRadius = 3.0,
      regenExtraResistanceSeconds = 3,
      regenCleanseNegatives = true,
      regenAntiProjectiles = true,
      regenSlowPlayers = true,
      regenDurationSecondsBase = 6,
      regenDurationSecondsPerLevel = 0.06,  // +1с примерно на 17 уровней
      regenDurationSecondsMax = 16,
      regenAmplifierBase = 0,               // Regeneration I
      regenAmplifierPerLevel = 0.02,        // +1 уровень примерно на 50 лвл
      regenAmplifierMax = 2,                // максимум Regeneration III
      isFireRingEnabled = true,
      fireRingMinRadius = 4.0,
      fireRingMaxRadius = 7.0,
      fireRingDensity = 0.7,
      fireRingCooldown = 6000L,
      fireRingCooldownBias = 1.3,
      fireRingLevelThreshold = 20,
      isWebRingEnabled = true,
      webRingRadius = 3.0,
      webRingDuration = 8,
      webRingPotionEnabled = true,
      webRingPotionBaseDuration = 4,
      webRingPotionMaxDuration = 10,
      webRingPotionLevelModifier = 0.06,
      webRingCooldown = 8000L,
      webRingCooldownBias = 1.4,
      webRingLevelThreshold = 28,
      isTeleportStrikeEnabled = true,
      teleportStrikeCooldown = 11000L,
      teleportStrikeCooldownBias = 1.2,
      teleportStrikeLevelThreshold = 50,
      meteorShowerLevelThreshold = 35,
      meteorShowerCooldown = 16_000,
      meteorShowerCooldownBias = 1.2,
      meteorLifetimeSeconds = 8,
      wavesBase = 2,
      wavesPerLevel = 0.03,
      wavesMax = 5,
      meteorsPerWaveBase = 6,
      meteorsPerWavePerLevel = 0.08,
      meteorsPerWaveMax = 20,
      radiusBase = 6.0,
      radiusPerLevel = 0.05,
      radiusMax = 14.0,
      meteorShowerHeight = 18.0,
      fallSpeed = 1.2,
      waveIntervalTicks = 20L,
      impactDamageBase = 4.0,
      impactDamagePerLevel = 0.12,
      impactDamageMax = 18.0,
      fireRadius = 2.5,
      igniteSeconds = 3,
      arrowArcLevelThreshold = 18,
      arrowArcCooldown = 7_000,
      arrowArcCooldownBias = 1.1,
      arrowsBase = 18,
      arrowsPerLevel = 0.2,
      arrowsMax = 48,
      rings = 3,
      staggered = true,
      noGravity = true,
      speed = 1.6,
      verticalSpread = 0.00,
      damageBase = 3.0,
      damagePerLevel = 0.05,
      damageMax = 8.0,
      arrowLifetimeSeconds = 6,
      randomEffectLevelThreshold = 45,
      randomEffectsMaxPerRing = 16,
      effectDurationSeconds = 6,
      effectAmplifierMin = 0,
      effectAmplifierMax = 1,
      negativeEffects = listOf(
        PotionEffectType.SLOWNESS,
        PotionEffectType.POISON,
        PotionEffectType.WEAKNESS,
        PotionEffectType.MINING_FATIGUE,
        PotionEffectType.BLINDNESS,
        PotionEffectType.HUNGER,
        PotionEffectType.WITHER,
        PotionEffectType.LEVITATION,
        PotionEffectType.NAUSEA,
        PotionEffectType.DARKNESS,
        PotionEffectType.UNLUCK,
        PotionEffectType.BAD_OMEN,
      ),
      isArrowRainEnabled = true,
      arrowRainLevelThreshold = 22,
      arrowRainCooldown = 8_000L,
      arrowRainCooldownBias = 1.1,
      arrowRainArrowsBase = 30,
      arrowRainArrowsPerLevel = 0.30,
      arrowRainArrowsMax = 90,
      arrowRainWaves = 2,
      arrowRainWaveIntervalTicks = 20L,
      arrowRainHalfSize = 8.0,     // 16x16 площадь
      arrowRainHeight = 12.0,
      arrowRainFallSpeed = 0.9,
      arrowRainDamageBase = 2.6,
      arrowRainDamagePerLevel = 0.06,
      arrowRainDamageMax = 7.0,
      arrowRainLifetimeSeconds = 6,
      arrowRainRandomEffectLevelThreshold = 35,
      arrowRainRandomEffectsMaxPerWave = 24,
      arrowRainEffectDurationSeconds = 6,
      arrowRainEffectAmplifierMin = 0,
      arrowRainEffectAmplifierMax = 1,
      arrowRainNegativeEffects = listOf(
        PotionEffectType.SLOWNESS,
        PotionEffectType.POISON,
        PotionEffectType.WEAKNESS,
        PotionEffectType.MINING_FATIGUE,
        PotionEffectType.BLINDNESS,
        PotionEffectType.HUNGER,
        PotionEffectType.WITHER,
        PotionEffectType.LEVITATION,
        PotionEffectType.NAUSEA,
        PotionEffectType.DARKNESS,
        PotionEffectType.UNLUCK,
        PotionEffectType.BAD_OMEN
      ),
      arrowRainTargetSearchRadius = 40.0,
    )
  }
}
